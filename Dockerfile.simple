# Simple single-stage Dockerfile for testing
FROM rust:latest

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js for frontend dependencies
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs

# Install cargo-leptos
RUN cargo install cargo-leptos --locked

# Install nightly toolchain and add WebAssembly target
RUN rustup toolchain install nightly --component rust-src
RUN rustup target add wasm32-unknown-unknown --toolchain nightly
RUN rustup default nightly

# Set working directory
WORKDIR /app

# Copy workspace files first (for better caching)
COPY Cargo.toml Cargo.lock ./

# Copy source code
COPY app/ ./app/
COPY server/ ./server/
COPY frontend/ ./frontend/
COPY common/ ./common/
COPY style/ ./style/
COPY public/ ./public/

# Build the application
RUN cargo leptos build --release

# Expose port
EXPOSE 3000

# Set environment variables
ENV LEPTOS_OUTPUT_NAME="self-changer"
ENV LEPTOS_SITE_ROOT="target/site"
ENV LEPTOS_SITE_PKG_DIR="pkg"
ENV LEPTOS_SITE_ADDR="0.0.0.0:3000"
ENV LEPTOS_RELOAD_PORT="3001"

# Run the application
CMD ["./target/server/release/server"]
